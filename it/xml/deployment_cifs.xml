<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_cifs.xml" version="5.0" xml:id="cha-ses-cifs">

 <title>Esportazione di CephFS tramite Samba</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer>tbazant@suse.com</dm:maintainer>
        <dm:status>modifica</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>sì</dm:translation>
        <dm:languages/>
        <dm:release>SES 5</dm:release>
      </dm:docmanager>
    </info>
    <para>
  Questa sezione descrive come esportare CephFS tramite una condivisione Samba/CIFS. Le condivisioni Samba possono essere utilizzate con client Windows*.
 </para>
 <warning>
  <title>tecnologia in anteprima</title>
  <para>
   A SUSE Enterprise Storage 5, l'esportazione delle condivisioni Samba è considerata un'anteprima e non è supportata.
  </para>
 </warning>
 <sect1 xml:id="sec-ses-cifs-example">
  <title>Installazione di esempio</title>

  <para>
   L'esportazione di CephFS è un'anteprima e non è supportata. Per esportare una condivisione Samba, occorre installare manualmente Samba su un nodo cluster e configurarlo. La funzionalità di failover può essere fornita con CTDB e SUSE Linux Enterprise High Availability Extension.
  </para>

  <procedure>
   <step>
    <para>
     Accertare che nel cluster sia già esistente un CephFS operativo. Per informazioni, vedere <xref linkend="cha-ceph-as-cephfs"/>.
    </para>
   </step>
   <step>
    <para>
     Creare un portachiavi gateway Samba specifico sul Salt master e copiarlo nel nodo gateway Samba:
    </para>
<screen><prompt>root@master # </prompt><command>ceph</command> auth get-or-create client.samba.gw mon 'allow r' \
    osd 'allow *' mds 'allow *' -o ceph.client.samba.gw.keyring
<prompt>root@master # </prompt><command>scp</command> ceph.client.samba.gw.keyring <replaceable>SAMBA_NODE</replaceable>:/etc/ceph/</screen>
    <para>
     Sostituire <replaceable>SAMBA_NODE</replaceable> con il nome del nodo gateway Samba.
    </para>
   </step>
   <step>
    <para>
     I passaggi seguenti vengono eseguiti sul nodo gateway Samba. Installare il daemon Samba sul nodo gateway Samba:
    </para>
<screen><prompt>root # </prompt><command>zypper</command> in samba samba-ceph</screen>
   </step>
   <step>
    <para>
     Modificare <filename>/etc/samba/smb.conf</filename> e aggiungere la sezione seguente:
    </para>
<screen>[<replaceable>SHARE_NAME</replaceable>]
        path = /
        vfs objects = ceph
        ceph:config_file = /etc/ceph/ceph.conf
        ceph: user_id = samba.gw
        read only = no</screen>
   </step>
   <step>
    <para>
     Avviare a abilitare il daemon Samba:
    </para>
<screen><prompt>root # </prompt><command>systemctl</command> start smb.service
<prompt>root # </prompt><command>systemctl</command> enable smb.service
<prompt>root # </prompt><command>systemctl</command> start nmb.service
<prompt>root # </prompt><command>systemctl</command> enable nmb.service</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-ses-cifs-ha">
  <title>Configurazione ad alta disponibilità</title>

  <para>
   Questa sezione fornisce un esempio di come configurare una configurazione ad alta disponibilità a due nodi dei server Samba. La configurazione richiede SUSE Linux Enterprise High Availability Extension. I due nodi sono denominati <systemitem class="domainname">earth</systemitem> (<systemitem class="ipaddress">192.168.1.1</systemitem>) e <systemitem class="domainname">mars</systemitem> (<systemitem class="ipaddress">192.168.1.2</systemitem>).
  </para>

  <para>
   Per informazioni su SUSE Linux Enterprise High Availability Extension, vedere <link xlink:href="https://www.suse.com/documentation/sle-ha-12/"/>.
  </para>

  <para>
   Inoltre, due indirizzi IP virtuali mobili consentono ai client di connettersi al servizio indipendentemente dal nodo fisico sul quale è in esecuzione. <systemitem class="ipaddress">192.168.1.10</systemitem> è utilizzato per amministrazione del cluster con Hawk2 e <systemitem class="ipaddress">192.168.2.1</systemitem> esclusivamente per esportazioni CIFS. Ciò semplifica la successiva applicazione delle limitazioni di sicurezza.
  </para>

  <para>
   La procedura seguente descrive l'installazione di esempio. Ulteriori informazioni sono disponibili all'indirizzo <link xlink:href="https://www.suse.com/documentation/sle-ha-12/install-quick/data/install-quick.html"/>.
  </para>

  <procedure xml:id="proc-sec-ses-cifs-ha">
   <step>
    <para>
     Creare un portachiavi gateway Samba specifico sul Salt master e copiarlo su entrambi i nodi:
    </para>
<screen><prompt>root@master # </prompt><command>ceph</command> auth get-or-create client.samba.gw mon 'allow r' \
    osd 'allow *' mds 'allow *' -o ceph.client.samba.gw.keyring
<prompt>root@master # </prompt><command>scp</command> ceph.client.samba.gw.keyring <systemitem class="domainname">earth</systemitem>:/etc/ceph/
<prompt>root@master # </prompt><command>scp</command> ceph.client.samba.gw.keyring <systemitem class="domainname">mars</systemitem>:/etc/ceph/</screen>
   </step>
   <step>
    <para>
     Preparare <systemitem class="domainname">earth</systemitem> e <systemitem class="domainname">mars</systemitem> per ospitare il servizio Samba:
    </para>
    <substeps>
     <step>
      <para>
       Prima di continuare, verificare che siano installati i seguenti pacchetti:
       <package>ctdb</package>, <package>tdb-tools</package>, e
       <package>samba</package> (necessario per le risorse smb e nmb).
      </para>
<screen><prompt>root # </prompt><command>zypper</command> in ctdb tdb-tools samba samba-ceph</screen>
     </step>
     <step>
      <para>
       Verificare che i servizi <literal>ctdb</literal>, <literal>smb</literal> e <literal>nmb</literal> siano arrestati e disabilitati:
      </para>
<screen><prompt>root # </prompt><command>systemctl</command> disable ctdb
<prompt>root # </prompt><command>systemctl</command> disable smb
<prompt>root # </prompt><command>systemctl</command> disable nmb
<prompt>root # </prompt><command>systemctl</command> stop smb
<prompt>root # </prompt><command>systemctl</command> stop nmb</screen>
     </step>
     <step>
      <para>
       Aprire la porta <literal>4379</literal> del firewall su tutti i nodi. Questo passaggio è necessario affinché CTDB comunichi con altri nodi del cluster.
      </para>
     </step>
     <step>
      <para>
       Creare una directory per il blocco CTDB sul file system condiviso:
      </para>
<screen><prompt>root # </prompt><command>mkdir</command> -p /srv/samba/</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Su <systemitem class="domainname">earth</systemitem> creare i file di configurazione per Samba. In seguito verranno sincronizzati con <systemitem class="domainname">mars</systemitem>.
    </para>
    <substeps>
     <step>
      <para>
       In <filename>/etc/ctdb/nodes</filename> inserire tutti i nodi contenenti tutti gli indirizzi IP privati di ogni nodo nel cluster:
      </para>
<screen>192.168.1.1
192.168.1.2</screen>
     </step>
     <step>
      <para>
       Configurare Samba. Aggiungere le righe seguenti nella sezione <literal>[global]</literal> di <filename>/etc/samba/smb.conf</filename>. Utilizzare il nome host prescelto al posto di "CTDB-SERVER" (tutti i nodi del cluster compaiono in effetti come un grande nodo con questo nome):
      </para>
<screen>[global]
    netbios name = CTDB-SERVER
    clustering = yes
    idmap config * : backend = tdb2
    passdb backend = tdbsam
    ctdbd socket = /var/lib/ctdb/ctdb.socket</screen>
      <para>
       Per informazioni su <command>csync2</command>, vedere <link xlink:href="https://www.suse.com/documentation/sle-ha-12/singlehtml/book_sleha/book_sleha.html#pro.ha.installation.setup.csync2.start"/>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Installare ed eseguire il bootstrap del cluster SUSE Linux Enterprise High Availability.
    </para>
    <substeps>
     <step>
      <para>
       Registrare SUSE Linux Enterprise High Availability Extension su <systemitem class="domainname">earth</systemitem> e <systemitem class="domainname">mars</systemitem>.
      </para>
<screen><prompt>root@earth # </prompt><command>SUSEConnect</command> -r <replaceable>ACTIVATION_CODE</replaceable> -e <replaceable>E_MAIL</replaceable></screen>
<screen><prompt>root@mars # </prompt><command>SUSEConnect</command> -r <replaceable>ACTIVATION_CODE</replaceable> -e <replaceable>E_MAIL</replaceable></screen>
     </step>
     <step>
      <para>
       Installare <package>ha-cluster-bootstrap</package> su entrambi i nodi:
      </para>
<screen><prompt>root@earth # </prompt><command>zypper</command> in ha-cluster-bootstrap</screen>
<screen><prompt>root@mars # </prompt><command>zypper</command> in ha-cluster-bootstrap</screen>
     </step>
     <step>
      <para>
       Inizializzare il cluster su <systemitem class="domainname">earth</systemitem>:
      </para>
<screen>
<prompt>root@earth # </prompt><command>ha-cluster-init</command>
      </screen>
     </step>
     <step>
      <para>
       Lasciare che <systemitem class="domainname">mars</systemitem> si unisca al cluster:
      </para>
<screen>
<prompt>root@mars # </prompt><command>ha-cluster-join</command> -c earth
      </screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Verificare lo stato del cluster. Dovrebbero essere visibili due nodi aggiunti nel cluster:
    </para>
<screen><prompt>root@earth # </prompt><command>crm</command> status
2 nodes configured
1 resource configured

Online: [ earth mars ]

Full list of resources:

 admin-ip       (ocf::heartbeat:IPaddr2):       Started earth</screen>
   </step>
   <step>
    <para>
     Eseguire i comandi seguenti su <systemitem class="domainname">earth</systemitem> per configurare la risorsa CTDB:
    </para>

<screen><prompt>root@earth # </prompt><command>crm</command> configure
<prompt>crm(live)configure# </prompt><command>primitive</command> ctdb ocf:heartbeat:CTDB params \
    ctdb_manages_winbind="false" \
    ctdb_manages_samba="false" \
    ctdb_recovery_lock="!/usr/lib64/ctdb/ctdb_mutex_ceph_rados_helper
        ceph client.samba.gw cephfs_metadata ctdb-mutex"
    ctdb_socket="/var/lib/ctdb/ctdb.socket" \
        op monitor interval="10" timeout="20" \
        op start interval="0" timeout="90" \
        op stop interval="0" timeout="100"
<prompt>crm(live)configure# </prompt><command>primitive</command> nmb systemd:nmb \
    op start timeout="60" interval="0" \
    op stop timeout="60" interval="0" \
    op monitor interval="60" timeout="60"
<prompt>crm(live)configure# </prompt><command>primitive</command> smb systemd:smb \
    op start timeout="60" interval="0" \
    op stop timeout="60" interval="0" \
    op monitor interval="60" timeout="60"
<prompt>crm(live)configure# </prompt><command>group</command> g-ctdb ctdb nmb smb
<prompt>crm(live)configure# </prompt><command>clone</command> cl-ctdb g-ctdb meta interleave="true"
<prompt>crm(live)configure# </prompt><command>commit</command></screen>
    <para>
     Il binario <command>/usr/lib64/ctdb/ctdb_mutex_ceph_rados_helper</command> nell'opzione di configurazione <literal>ctdb_recovery_lock</literal> ha i parametri <replaceable>CLUSTER_NAME</replaceable>
     <replaceable>CEPHX_USER</replaceable> <replaceable>CEPH_POOL</replaceable>
     <replaceable>CEPHX_USER</replaceable> in questo ordine.
    </para>
   </step>
   <step>
    <para>
     Aggiungere un indirizzo IP di cluster:
    </para>
<screen><prompt>crm(live)configure# </prompt><command>primitive</command> ip ocf:heartbeat:IPaddr2 params ip=192.168.2.1 \
    unique_clone_address="true" \
    op monitor interval="60" \
    meta resource-stickiness="0"
<prompt>crm(live)configure# </prompt><command>clone</command> cl-ip ip \
    meta interleave="true" clone-node-max="2" globally-unique="true"
<prompt>crm(live)configure# </prompt><command>colocation</command> col-with-ctdb 0: cl-ip cl-ctdb
<prompt>crm(live)configure# </prompt><command>order</command> o-with-ctdb 0: cl-ip cl-ctdb
<prompt>crm(live)configure# </prompt><command>commit</command></screen>
    <para>
     Se <literal>unique_clone_address</literal> è impostato su <literal>true</literal>, l'agente della risorsa IPaddr2 aggiunge un ID clone all'indirizzo specificato, portando a tre diversi indirizzi IP, che non sono di solito necessari, ma aiutano per il bilanciamento di carico. Per ulteriori informazioni su questo argomento, vedere <link xlink:href="https://www.suse.com/documentation/sle-ha-12/book_sleha/data/cha_ha_lb.html"/>.
    </para>
   </step>
   <step>
    <para>
     Controllare il risultato:
    </para>
<screen><prompt>root@earth # </prompt><command>crm</command> status
Clone Set: base-clone [dlm]
     Started: [ factory-1 ]
     Stopped: [ factory-0 ]
 Clone Set: cl-ctdb [g-ctdb]
     Started: [ factory-1 ]
     Started: [ factory-0 ]
 Clone Set: cl-ip [ip] (unique)
     ip:0       (ocf:heartbeat:IPaddr2):       Started factory-0
     ip:1       (ocf:heartbeat:IPaddr2):       Started factory-1</screen>
   </step>
   <step>
    <para>
     Eseguire un test da un computer client. Su un client Linux, eseguire il seguente comando per vedere se è possibile copiare i file dal e nel sistema:
    </para>
<screen><prompt>root # </prompt><command>smbclient</command> <option>//192.168.2.1/myshare</option></screen>
   </step>
  </procedure>
 </sect1>
</chapter>
