<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_ds_custom.xml" version="5.0" xml:id="ceph-deploy-ds-custom">
 <title>自訂預設組態</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:translation>yes</dm:translation>
        <dm:release>SES 5</dm:release>
      </dm:docmanager>
    </info>
    <para>
  您可以變更在階段 2 產生的預設叢集組態 (請參閱<xref linkend="deepsea-stage-description"/>)。例如，您可能需要變更網路設定，或預設安裝在 Salt Master 上的軟體。若要執行前一項操作，可以修改在階段 2 之後更新的 pillar；對於後一項操作，通常可以透過建立自訂 <literal>sls</literal> 檔案並將其新增到 pillar 來完成。如需詳細資料，請參閱以下各節。
 </para>
 <sect1 xml:id="using-customized-files">
  <title>使用自訂的組態檔案</title>

  <para>
   本節列出了需要新增/變更您自己的 <literal>sls</literal> 檔案的多個任務。當您需要變更預設部署程序時，一般會使用這樣的程序。
  </para>

  <tip>
   <title>為自訂 .sls 檔案附加字首</title>
   <para>
    您的自訂 .sls 檔案與 DeepSea 的 .sls 檔案屬於同一個子目錄。為了防止剛從 DeepSea 套件中新增的檔案覆寫您的 .sls 檔案，請在您的檔案名稱前附加 <filename>custom-</filename> 字串。
   </para>
  </tip>

  <sect2>
   <title>停用部署步驟</title>
   <para>
    如果您遇到一個不屬於 DeepSea 部署程序的特定任務，因而需要跳過此任務，請依照以下範例建立一個「no-operation」檔案︰
   </para>
   <procedure>
    <title>停用時間同步</title>
    <step>
     <para>
      建立並儲存包含以下內容的 <filename>/srv/salt/ceph/time/disabled.sls</filename>︰
     </para>
<screen>disable time setting:
test.nop</screen>
    </step>
    <step>
     <para>
      編輯 <filename>/srv/pillar/ceph/stack/global.yml</filename>，新增下行，並儲存該檔案︰
     </para>
<screen>time_init: disabled</screen>
    </step>
    <step>
     <para>
      透過重新整理 pillar 並執行以下步驟進行驗證︰
     </para>
<screen><prompt>root@master # </prompt>salt <replaceable>target</replaceable> saltutil.pillar_refresh
<prompt>root@master # </prompt>salt 'admin.ceph' state.apply ceph.time
admin.ceph:
  Name: disable time setting - Function: test.nop - Result: Clean

Summary for admin.ceph
------------
Succeeded: 1
Failed:    0
------------
Total states run:     1</screen>
     <note>
      <title>唯一 ID</title>
      <para>
       任務 ID「disable time setting」可以是在 <literal>sls</literal> 檔案中唯一的任何訊息。您可透過指定唯一的描述來防止 ID 衝突。
      </para>
     </note>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="deepsea-replacing-step">
   <title>取代部署步驟</title>
   <para>
    如果需要使用自訂行為取代特定步驟的預設行為，請建立包含取代內容的自訂 <literal>sls</literal> 檔案。
   </para>
   <para>
    預設情況下，<filename>/srv/salt/ceph/pool/default.sls</filename> 會建立名為「demo」的 rbd 影像。在本範例中，我們不想建立此影像，而是需要以下兩個影像︰「archive1」和「archive2」。
   </para>
   <procedure>
    <title>使用兩個自訂 rbd 影像取代 <emphasis>demo</emphasis> rbd 影像</title>
    <step>
     <para>
      建立並儲存包含以下內容的 <filename>/srv/salt/ceph/pool/custom.sls</filename>︰
     </para>
<screen>wait:
  module.run:
    - name: wait.out
    - kwargs:
        'status': "HEALTH_ERR"<co xml:id="co-deepsea-replace-wait"/>
    - fire_event: True

archive1:
  cmd.run:
    - name: "rbd -p rbd create archive1 --size=1024"<co xml:id="co-deepsea-replace-rbd"/>
    - unless: "rbd -p rbd ls | grep -q archive1$"
    - fire_event: True

archive2:
  cmd.run:
    - name: "rbd -p rbd create archive2 --size=768"
    - unless: "rbd -p rbd ls | grep -q archive2$"
    - fire_event: True</screen>
     <calloutlist>
      <callout arearefs="co-deepsea-replace-wait">
       <para>
        <emphasis role="bold">wait</emphasis> 模組將會暫停，直到 Ceph 叢集狀態不是 <literal>HEALTH_ERR</literal> 為止。在全新安裝中，當有足夠數量的 OSD 可用且池建立完成之前，Ceph 叢集可能會一直保持此狀態。
       </para>
      </callout>
      <callout arearefs="co-deepsea-replace-rbd">
       <para>
        <command>rbd</command> 指令不是等冪。如果在提供影像之後重新執行同一個建立指令，則 Salt 狀態將失敗。<emphasis role="bold">unless</emphasis> 陳述式可防止這種情況。
       </para>
      </callout>
     </calloutlist>
    </step>
    <step>
     <para>
      若要呼叫新建的自訂檔案而不是預設檔案，需要編輯 <filename>/srv/pillar/ceph/stack/ceph/cluster.yml</filename>，新增下行，然後儲存該檔案︰
     </para>
<screen>pool_init: custom</screen>
    </step>
    <step>
     <para>
      透過重新整理 pillar 並執行以下步驟進行驗證︰
     </para>
<screen><prompt>root@master # </prompt>salt <replaceable>target</replaceable> saltutil.pillar_refresh
<prompt>root@master # </prompt>salt 'admin.ceph' state.apply ceph.pool</screen>
    </step>
   </procedure>
   <note>
    <title>授權</title>
    <para>
     建立池或影像需要有足夠的授權。<literal>admin.ceph</literal> Minion 具有管理金鑰圈。
    </para>
   </note>
   <tip>
    <title>替代方法</title>
    <para>
     另一種做法是變更 <filename>/srv/pillar/ceph/stack/ceph/roles/master.yml</filename> 中的變數。使用此檔案可緩解其他 Minion 的 pillar 資料凌亂情況。
    </para>
   </tip>
  </sect2>

  <sect2>
   <title>修改部署步驟</title>
   <para>
    有時，您可能需要使用特定的步驟來執行某些額外任務。不建議您修改相關的狀態檔案，因為這可能導致將來的升級變得複雜。應建立一個單獨的檔案來執行<xref linkend="deepsea-replacing-step"/>中所述的相同額外任務。
   </para>
   <para>
    為新的 <literal>sls</literal> 檔案提供一個描述性名稱。例如，如果除了 demo 影像以外，您還需要建立兩個 rbd 影像，則可將檔案命名為 <filename>archive.sls</filename>。
   </para>
   <procedure>
    <title>建立兩個其他 rbd 影像</title>
    <step>
     <para>
      建立並儲存包含以下內容的 <filename>/srv/salt/ceph/pool/custom.sls</filename>︰
     </para>
<screen>include:
 - .archive
 - .default</screen>
     <tip>
      <title>Include 優先順序</title>
      <para>
       在本範例中，Salt 將會依次建立 <emphasis>archive</emphasis> 影像和 <emphasis>demo</emphasis> 影像。本範例中的順序並不重要。若要變更順序，請反轉 <literal>include:</literal> 指令後面的行。
      </para>
      <para>
       您可將 include 行直接新增到 <filename>archive.sls</filename>，如此也會建立所有影像。但是，無論將 include 行置於哪個位置，Salt 都會先處理所包含檔案中的步驟。儘管可以使用 <emphasis>requires</emphasis> 和 <emphasis>order</emphasis> 陳述式覆寫此行為，但使用包含其他陳述式的單獨檔案可保證順序正確，並減少出現混淆的可能性。
      </para>
     </tip>
    </step>
    <step>
     <para>
      編輯 <filename>/srv/pillar/ceph/stack/ceph/cluster.yml</filename>，新增下行，並儲存該檔案︰
     </para>
<screen>pool_init: custom</screen>
    </step>
    <step>
     <para>
      透過重新整理 pillar 並執行以下步驟進行驗證︰
     </para>
<screen><prompt>root@master # </prompt>salt <replaceable>target</replaceable> saltutil.pillar_refresh
<prompt>root@master # </prompt>salt 'admin.ceph' state.apply ceph.pool</screen>
    </step>
   </procedure>
  </sect2>

  <sect2>
   <title>修改部署階段</title>
   <para>
    如果需要新增完全獨立的部署步驟，請建立 3 個新檔案︰用於執行指令的 <literal>sls</literal> 檔案、協調化檔案，以及使新步驟與原始部署步驟保持一致的自訂檔案。
   </para>
   <para>
    例如，如果在執行準備階段期間需要在所有 Minion 上執行 <command>logrotate</command>︰
   </para>
   <para>
    首先建立一個 <literal>sls</literal> 檔案並包含 <command>logrotate</command> 指令。
   </para>
   <procedure>
    <title>在所有 Salt Minion 上執行 <command>logrotate</command></title>
    <step>
     <para>
      建立一個目錄，例如 <filename>/srv/salt/ceph/logrotate</filename>。
     </para>
    </step>
    <step>
     <para>
      建立並儲存包含以下內容的 <filename>/srv/salt/ceph/logrotate/init.sls</filename>︰
     </para>
<screen>rotate logs:
  cmd.run:
    - name: "/usr/sbin/logrotate /etc/logrotate.conf"</screen>
    </step>
    <step>
     <para>
      驗證該指令在 Minion 上是否正常運作︰
     </para>
<screen><prompt>root@master # </prompt>salt 'admin.ceph' state.apply ceph.logrotate</screen>
    </step>
   </procedure>
   <para>
    由於協調化檔案需要在其他所有準備步驟之前執行，因此請將其新增到<emphasis>準備</emphasis>階段 0︰
   </para>
   <procedure>
    <step>
     <para>
      建立並儲存包含以下內容的 <filename>/srv/salt/ceph/stage/prep/logrotate.sls</filename>︰
     </para>
<screen>logrotate:
  salt.state:
    - tgt: '*'
    - sls: ceph.logrotate</screen>
    </step>
    <step>
     <para>
      驗證協調化檔案是否正常運作︰
     </para>
<screen><prompt>root@master # </prompt>salt-run state.orch ceph.stage.prep.logrotate</screen>
    </step>
   </procedure>
   <para>
    最後一個檔案是自訂檔案，其中包含附加步驟和原始步驟︰
   </para>
   <procedure>
    <step>
     <para>
      建立並儲存包含以下內容的 <filename>/srv/salt/ceph/stage/prep/custom.sls</filename>︰
     </para>
<screen>include:
  - .logrotate
  - .master
  - .minion</screen>
    </step>
    <step>
     <para>
      覆寫預設行為。編輯 <filename>/srv/pillar/ceph/stack/global.yml</filename>，新增下行，並儲存該檔案︰
     </para>
<screen>stage_prep: custom</screen>
    </step>
    <step>
     <para>
      驗證階段 0 是否正常運作︰
     </para>
<screen><prompt>root@master # </prompt>salt-run state.orch ceph.stage.0</screen>
    </step>
   </procedure>
   <note>
    <title>為何使用 <filename>global.yml</filename>？</title>
    <para>
     之所以選擇 <filename>global.yml</filename> 檔案而不選擇 <filename>cluster.yml</filename>，是因為在<emphasis>準備</emphasis>階段，所有 Minion 都不屬於 Ceph 叢集，並且無權存取 <filename>cluster.yml</filename> 中的任何設定。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="ds-disable-reboots">
   <title>在階段 0 期間停用更新和重新開機</title>
   <para>
    階段 0 期間 (如需 DeepSea 階段的詳細資訊，請參閱<xref linkend="deepsea-stage-description"/>)。Salt Master 和 Salt Minion 可能會因新更新的套件 (例如
    <package>kernel</package>) 要求將系統重新開機而進行重新開機。
   </para>
   <para>
    為防止在階段 0 期間更新或將叢集節點重新開機，請編輯 <filename>/srv/pillar/ceph/stack/ceph/cluster.yml</filename> 並新增 <option>stage_prep_master</option> 或 <option>stage_prep_minion</option> 選項，具體取決於您是否需要修改 Salt Master、所有 Salt Minion 或所有節點的行為。
   </para>
   <para>
    這兩個選項接受以下值︰
   </para>
   <variablelist>
    <varlistentry>
     <term>default-no-update-no-reboot</term>
     <listitem>
      <para>
       阻止節點更新其套件和重新開機。
      </para>
     </listitem>
     </varlistentry>
     <varlistentry>
     <term>default-no-update-reboot</term>
    <listitem>
     <para>
      阻止節點更新其套件，但允許重新開機。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>default-update-no-reboot</term>
    <listitem>
     <para>
      阻止將節點重新開機，但允許更新其套件。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>default</term>
    <listitem>
     <para>
      允許更新節點套件和重新開機。
     </para>
    </listitem>
   </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="discovered-configuration-modification">
  <title>修改已探查的組態</title>

  <para>
   完成階段 2 之後，您可能需要變更已探查的組態。若要檢視目前設定，請執行︰
  </para>

<screen><prompt>root@master # </prompt>salt <replaceable>target</replaceable> pillar.items</screen>

  <para>
   單一 Minion 的預設組態的輸出通常類似下方所示︰
  </para>

<screen>----------
    available_roles:
        - admin
        - mon
        - storage
        - mds
        - igw
        - rgw
        - client-cephfs
        - client-radosgw
        - client-iscsi
        - mds-nfs
        - rgw-nfs
        - master
    cluster:
        ceph
    cluster_network:
        172.16.22.0/24
    fsid:
        e08ec63c-8268-3f04-bcdb-614921e94342
    master_minion:
        admin.ceph
    mon_host:
        - 172.16.21.13
        - 172.16.21.11
        - 172.16.21.12
    mon_initial_members:
        - mon3
        - mon1
        - mon2
    public_address:
        172.16.21.11
    public_network:
        172.16.21.0/24
    roles:
        - admin
        - mon
        - mds
    time_server:
        admin.ceph
    time_service:
        ntp</screen>

  <para>
   將在多個組態檔案之間分發上述設定。包含這些檔案的目錄結構在 <filename>/srv/pillar/ceph/stack/stack.cfg</filename> 目錄中定義。以下檔案通常用於描述您的叢集︰
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <filename>/srv/pillar/ceph/stack/global.yml</filename> - 該檔案會影響 Salt 叢集中的所有 Minion。
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>/srv/pillar/ceph/stack/<replaceable>ceph</replaceable>/cluster.yml</filename> - 該檔案會影響名為 <literal>ceph</literal> 的 Ceph 叢集中的所有 Minion。
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>/srv/pillar/ceph/stack/<replaceable>ceph</replaceable>/roles/<replaceable>role</replaceable>.yml</filename> - 會影響 <literal>ceph</literal> 叢集中指定了特定角色的所有 Minion。
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>/srv/pillar/ceph/stack/<replaceable>ceph</replaceable>minions/<replaceable>minion ID</replaceable>/yml</filename> - 會影響個別 Minion。
    </para>
   </listitem>
  </itemizedlist>

  <note>
   <title>覆寫包含預設值的目錄</title>
   <para>
    <filename>/srv/pillar/ceph/stack/default</filename> 中存在儲存預設組態設定的平行目錄樹。請不要變更此處的值，否則會將其覆寫。
   </para>
  </note>

  <para>
   變更所收集組態的一般程序如下︰
  </para>

  <procedure>
   <step>
    <para>
     找到需要變更的組態項目的位置。例如，如果需要變更叢集網路等叢集相關設定，請編輯檔案 <filename>/srv/pillar/ceph/stack/ceph/cluster.yml</filename>。
    </para>
   </step>
   <step>
    <para>
     儲存檔案。
    </para>
   </step>
   <step>
    <para>
     執行以下指令來驗證所做的變更︰
    </para>
<screen><prompt>root@master # </prompt>salt <replaceable>target</replaceable> saltutil.pillar_refresh</screen>
    <para>
     然後輸入
    </para>
<screen><prompt>root@master # </prompt>salt <replaceable>target</replaceable> pillar.items</screen>
   </step>
  </procedure>
 </sect1>
</chapter>
